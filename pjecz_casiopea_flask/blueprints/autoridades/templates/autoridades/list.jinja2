{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}{{ titulo }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {% if current_user.can_view('DISTRITOS') %}
            {{ topbar.button_districts('Distritos', url_for('distritos.list_active')) }}
        {% endif %}
        {% if current_user.can_admin('AUTORIDADES') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('autoridades.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('autoridades.list_active')) }}{% endif %}
        {% endif %}
        {% if current_user.can_insert('AUTORIDADES') %}
            {{ topbar.button_new('Nueva Autoridad', url_for('autoridades.new')) }}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <!-- Filtros Autoridades -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosAutoridades.buscar(); return false;">
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="filtroAutoridadClave" type="text" class="form-control" aria-label="Clave" style="text-transform: uppercase;">
                            <label for="filtroAutoridadClave">Clave</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroAutoridadDescripcion" type="text" class="form-control" aria-label="Descripcion" style="text-transform: uppercase;">
                            <label for="filtroAutoridadDescripcion">Descripción</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="form-floating">
                            <input id="filtroAutoridadDistritoNombre" type="text" class="form-control" aria-label="Distrito" style="text-transform: uppercase;">
                            <label for="filtroAutoridadDistritoNombre">Distrito</label>
                        </div>
                    </div>
                    <div class="col-3 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosAutoridades.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosAutoridades.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Datatable Autoridades -->
        <table id="autoridades_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Clave</th>
                    <th>Descripción corta</th>
                    <th>Distrito</th>
                    <th>Activo</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable autoridades
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDTAutoridades = constructorDataTable.config();
        configDTAutoridades['ajax']['url'] = '/autoridades/datatable_json';
        configDTAutoridades['ajax']['data'] = {{ filtros }};
        configDTAutoridades['columns'] = [
            { data: "detalle" },
            { data: "descripcion_corta" },
            { data: "distrito_clave" },
            { data: "toggle_es_activo" }
        ];
        configDTAutoridades['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.clave + '</a>';
                }
            },
            {
                targets: 3, // toggle_es_activo
                data: null,
                render: function(data, type, row, meta) {
                    if (data.url === '') return data.estatus;
                    let myId = 'usuario_rol_estatus_' + data.id;
                    let myRow = 'usuario_rol_row_' + data.id;
                    let myOnClick = "toggleEsActivo('#" + myId + "', '" + data.url + "', '#" + myRow + "')";
                    if (data.es_activo === true) {
                        return '<button id="' + myId + '" type="button" class="btn btn-sm btn-outline-primary" onclick="' + myOnClick + '"><span class="iconify" data-icon="mdi:toggle-switch"></span></button>';
                    } else {
                        return '<button id="' + myId + '" type="button" class="btn btn-sm btn-light" onclick="' + myOnClick + '"><span class="iconify" data-icon="mdi:toggle-switch-off"></span></button>';
                    }
                }
            }
        ];
        // Filtros autoridades
        const filtrosAutoridades = new FiltrosDataTable('#autoridades_datatable', configDTAutoridades);
        filtrosAutoridades.agregarInput('filtroAutoridadClave', 'clave');
        filtrosAutoridades.agregarInput('filtroAutoridadDescripcion', 'descripcion');
        filtrosAutoridades.agregarInput('filtroAutoridadDistritoNombre', 'distrito_nombre');
        filtrosAutoridades.precargar();
        // Preparar headers para POST
        const myHeaders = new Headers();
        myHeaders.append("X-CSRF-TOKEN", "{{ csrf_token() }}");
        const myInit = {
            method: 'POST',
            headers: myHeaders,
            mode: 'cors',
            cache: 'default'
        };
        // Boton toggle_es_activo
        function toggleEsActivo(id, url, row) {
            $(id).prop("disabled", true); // Deshabilitar boton para evitar multiples clicks
            fetch(url, myInit)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        if (data.es_activo === true) {
                            $(id).removeClass('btn-light');
                            $(id).addClass('btn-outline-primary'); // Color azul
                            $(id).html('<span class="iconify" data-icon="mdi:toggle-switch"></span>'); // Icono toggle-switch
                            $(row).removeClass('table-secondary');
                        } else {
                            $(id).removeClass('btn-outline-primary');
                            $(id).addClass('btn-light'); // Color gris
                            $(id).html('<span class="iconify" data-icon="mdi:toggle-switch-off"></span>'); // Icono toggle-switch-off
                            $(row).addClass('table-secondary');
                        }
                    }
                    $(id).prop("disabled", false); // Habilitar boton
                })
                .catch(error => {
                    console.log(error);
                });
        }
    </script>
{% endblock %}
