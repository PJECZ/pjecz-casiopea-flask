{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Cliente {{ cit_cliente.email }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Cliente ' + cit_cliente.email) %}
        {{ topbar.button_previous('Clientes', url_for('cit_clientes.list_active')) }}
        {% if current_user.can_edit('CIT CLIENTES') %}
            {{ topbar.button_edit('Editar', url_for('cit_clientes.edit', cit_cliente_id=cit_cliente.id)) }}
        {% endif %}
        {% if current_user.can_admin('CIT CLIENTES') %}
            {% if cit_cliente.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('cit_clientes.delete', cit_cliente_id=cit_cliente.id)) }}{% endif %}
            {% if cit_cliente.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('cit_clientes.recover', cit_cliente_id=cit_cliente.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=cit_cliente.estatus) %}
        {{ detail.label_value_big('Nombre', cit_cliente.nombre) }}
        {{ detail.label_value('Email', cit_cliente.email) }}
        {{ detail.label_value('CURP', cit_cliente.curp) }}
        {{ detail.label_value('Teléfono', cit_cliente.telefono) }}
        {{ detail.label_value('Renovación', moment(cit_cliente.renovacion, local=True).format('ll')) }}
        {% if cit_cliente.limite_citas_pendientes == 0 %}
            {{ detail.label_value('Límite de Citas', 'Por defecto') }}
        {% else %}
            {{ detail.label_value('Límite de Citas', cit_cliente.limite_citas_pendientes) }}
        {% endif %}
        {# detail.label_value('Creado', moment(cit_cliente.creado, local=False).format('DD MMM YYYY HH:mm')) #}
    {% endcall %}
    {% if current_user.can_view('CIT CITAS') %}
        {% call detail.card('Citas') %}
            <!-- DataTable CitCitas -->
            <table id="cit_citas_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Creado</th>
                        <th>Fecha</th>
                        <th>Inicio</th>
                        <th>Término</th>
                        <th>Oficina</th>
                        <th>Servicio</th>
                        <th>Estado</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    {% if current_user.can_view('PAG PAGOS') %}
        {% call detail.card('Pagos') %}
            <!-- DataTable PagPagos -->
            <table id="pag_pagos_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Creado</th>
                        <th>T/S</th>
                        <th>Distrito</th>
                        <th>Autoridad</th>
                        <th>Estado</th>
                        <th>Folio</th>
                        <th>Total</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('CIT CLIENTES') %}
        {% if cit_cliente.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + cit_cliente.email + '?') }}{% endif %}
        {% if cit_cliente.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + cit_cliente.email + '?') }}{% endif %}
    {% endif %}
    <!-- DataTables -->
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
    </script>
    {% if current_user.can_view('CIT CITAS') %}
        <script>
            // DataTable CitCitas
            let configDTCitCitas = constructorDataTable.config();
            configDTCitCitas['ajax']['url'] = '/cit_citas/datatable_json';
            configDTCitCitas['ajax']['data'] = { 'estatus': "A", 'cit_cliente_id': "{{ cit_cliente.id }}" };
            configDTCitCitas['columns'] = [
                { data: "detalle" },
                { data: "fecha" },
                { data: "inicio" },
                { data: "termino" },
                { data: "oficina" },
                { data: "cit_servicio" },
                { data: "estado" }
            ];
            configDTCitCitas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.creado + '</a>';
                    }
                },
                {
                    targets: 1, // fecha
                    type: 'date',
                    render: function (data, type, row) {
                        return moment(data).format('YYYY-MM-DD, ddd');
                    }
                },
                {
                    targets: [4, 5], // oficina y cit_servicio
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url !== '') {
                            return '<span title="' + data.descripcion + '">' + '<a href="' + data.url + '">' + data.clave + '</a></span>';
                        }
                        return '<span title="' + data.descripcion + '">' + data.clave + '</span>';
                    }
                },
                {
                    targets: 6, // Estado
                    data: null,
                    render: function(data, type, row, meta) {
                        let bg_class = "bg-primary";
                        switch (data)    {
                            case "ASISTIO":      bg_class = "bg-success";           break;
                            case "PENDIENTE":    bg_class = "bg-warning text-dark"; break;
                            case "CANCELO":      bg_class = "bg-secondary";         break;
                            case "INASISTENCIA": bg_class = "bg-danger";            break;
                        }
                        return '<span class="badge rounded-pill ' + bg_class + ' px-3">' + data + '</span>';
                    }
                }
            ];
            // DataTable estilos en las filas segun estado
            configDTCitCitas['createdRow'] = function(row, data, dataIndex) {
                switch (data.estado) {
                    case "ASISTIO":      $(row).addClass('table-success');   break;
                    case "PENDIENTE":    $(row).addClass('table-warning');   break;
                    case "CANCELO":      $(row).addClass('table-secondary'); break;
                    case "INASISTENCIA": $(row).addClass('table-danger');    break;
                }
            };
            // NO HAY Filtros CitCitas
            const filtrosCitCitas = new FiltrosDataTable('#cit_citas_datatable', configDTCitCitas);
            filtrosCitCitas.precargar();
        </script>
    {% endif %}
    {% if current_user.can_view('PAG PAGOS') %}
        <script>
            // DataTable PagPagos
            let configDTPagPagos = constructorDataTable.config();
            configDTPagPagos['ajax']['url'] = '/pag_pagos/datatable_json';
            configDTPagPagos['ajax']['data'] = { 'estatus': "A", 'cit_cliente_id': "{{ cit_cliente.id }}" };
            configDTPagPagos['columns'] = [
                { data: 'detalle' },
                { data: 'pag_tramite_servicio' },
                { data: 'distrito_clave' },
                { data: 'autoridad_clave' },
                { data: 'estado' },
                { data: 'folio' },
                { data: 'total', className: 'text-end' }
            ];
            configDTPagPagos['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.creado + '</a>';
                    }
                },
                {
                    targets: 1, // pag_tramite_servicio
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url !== '') {
                            return '<span title="' + data.descripcion + '">' + '<a href="' + data.url + '">' + data.clave + '</a></span>';
                        }
                        return '<span title="' + data.descripcion + '">' + data.clave + '</span>';
                    }
                },
                {
                    targets: 4, // Estado
                    data: null,
                    render: function(data, type, row, meta) {
                        let bg_class = "bg-info";
                        switch (data)    {
                            case "SOLICITADO": bg_class = "bg-warning text-dark"; break;
                            case "PAGADO":     bg_class = "bg-success";           break;
                            case "ENTREGADO":  bg_class = "bg-primary";           break;
                            case "CANCELADO":  bg_class = "bg-secondary";         break;
                            case "FALLIDO":    bg_class = "bg-danger";            break;
                        }
                        return '<span class="badge rounded-pill ' + bg_class + ' px-3">' + data + '</span>';
                    }
                },
                {
                    targets: 6, // total
                    data: null,
                    render: function(data, type, row, meta) {
                        return '$ ' + data;
                    }
                }
            ];
            // Cambiar el color de la fila según el estado
            configDTPagPagos['createdRow'] = function( row, data, dataIndex, cells){
                switch (data.estado)    {
                    case "SOLICITADO": $(row).addClass("table-warning");   break;
                    case "PAGADO":     $(row).addClass("table-success");   break;
                    case "ENTREGADO":  $(row).addClass("table-primary");   break;
                    case "CANCELADO":  $(row).addClass("table-secondary"); break;
                    case "FALLIDO":    $(row).addClass("table-danger");    break;
                }
            };
            // NO HAY Filtros PagPagos
            const filtrosPagPagos = new FiltrosDataTable('#pag_pagos_datatable', configDTPagPagos);
            filtrosPagPagos.precargar();
        </script>
    {% endif %}
{% endblock %}
